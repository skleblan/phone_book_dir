source 1

#define ASSERT_CONCAT_(a, b) a##b
#define ASSERT_CONCAT(a, b) ASSERT_CONCAT_(a, b)
#define ct_assert(e) enum { ASSERT_CONCAT(assert_line_, __LINE__) = 1/(!!(e)) }

source 2

#define CASSERT( predicate, file ) _impl_CASSERT_LINE(predicate, __LINE__,file)

#define _impl_PASTE(a,b) a##b
#define _impl_CASSERT_LINE(predicate, line, file) \
    typedef char _impl_PASTE(assertion_failed_##file##_,line)[2*!!(predicate)-1]

note 1

can't remember if it's gcc-99 or c-99 that doesn't recognize sizeof as a
preprocessor function

note 2

for runtime asserts include <assert.h> and use the macro assert(something)
